import java.util.zip.ZipEntry
import java.util.zip.ZipOutputStream

class ApkFile {
    String channel
    File file
}

/**
 * 查找所有apk
 * @param buildType release 或者 debug
 * @return ArrayList <ApkFile>
 */
def findApkFiles(String buildType) {
    println "findApkFiles buildType: " + buildType
    File apkDir = new File("H:/apk/release/")
    File[] channelDirs = apkDir.listFiles()

    List<ApkFile> apkFiles = new ArrayList<>()
    for (int i = 0; i < channelDirs.length; i++) {
        File channelDir = channelDirs[i]
        ApkFile apkFile = new ApkFile()
        apkFile.channel = channelDir.name

        File[] files = new File(channelDir, "/" + buildType).listFiles()
        if (files == null || files.length == 0) {
            continue
        }
        File lastFile = files[files.length - 1]
        if (!lastFile.name.endsWith(".apk")) {
            continue
        }

        apkFile.file = lastFile
        apkFiles.add(apkFile)
    }

    return apkFiles
}

/**
 * zip压缩apk保存目录，生成 build/outputs/release/pccb-x.x.x.zip
 * @param outputDir apk保存目录
 */
def compressDir(File outputDir) {
    println "*************** compress apk output dir ***************"
    File zipFile = new File(outputDir.getParent() + "/" + outputDir.getName() + ".zip")
    if (zipFile.exists()) {
        zipFile.delete()
    }
    println("开始打包ZIP")
    ZipOutputStream zos = new ZipOutputStream(new FileOutputStream(zipFile))
    File[] files = outputDir.listFiles()
    for (int i = 0; i < files.length; i++) {
        File file = files[i]
        byte[] bf = new byte[8192]
        FileInputStream fis = new FileInputStream(file)
        zos.putNextEntry(new ZipEntry(file.getName()))
        int len
        while ((len = fis.read(bf)) > 0) {
            zos.write(bf, 0, len)
        }
        zos.flush()
        fis.close()
    }
    zos.close()
    println("打包完毕")
}
//执行 打包程序
task jiaguApk {
    println("开始加固应用")
    android.applicationVariants.all { variant ->
        variant.assemble.doLast {
            if (variant.buildType.name.contains('release')) {
                def apkPath = variant.outputs.first().outputFile as File
                exec {
                    ignoreExitValue true
                    commandLine "sh", "D:/android/jiagu/jiagu.sh", apkPath, apkPath.getParent()
                }
            }
        }
    }
}
//构建发布到生产环境的所有渠道apk,生成压缩文件 pccb-x.x.x.zip
task packageReleases{
    dependsOn("assembleRelease")
    doLast {
        jiaguApk()
        println("加固完毕")
        println("开始打包ZIP")
        List<ApkFile> apkFiles = findApkFiles("release")
        if (apkFiles.size() == 0) {
            throw new RuntimeException("no apk files has found!")
        }

        String[] nameSlice = apkFiles.get(0).file.name.split("-")
        File outputDir = new File(OUTPUT_PATH + nameSlice[0] + "-" + nameSlice[1])
        if (outputDir.exists()) {
            if (!outputDir.delete()) {
                throw new RuntimeException("delete outputDir failure!")
            }
        }

        if (!outputDir.mkdirs()) {
            throw new RuntimeException("make outputDir failure!")
        }

        for (int i = 0; i < apkFiles.size(); i++) {
            ApkFile apkFile = apkFiles.get(i)
            reinforce(apkFile.file, outputDir.getPath(), apkFile.channel)
        }

        compressDir(outputDir)
    }
}